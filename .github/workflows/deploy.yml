name: Github Actions 실행하기

on:
  push:
    branches:
      - master

jobs:
  Manual-deployment-Job:
    runs-on: ubuntu-latest

    steps:
      - name: simple-action-test
        run: echo "This is the first cicd step"

      - name: Github repository 소스 가져오기
        uses: actions/checkout@v4

      - name: JDK 17 설치하기
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: applcation.yml 추가
        run:
          echo ${{secrets.APPLICATION_YML}} |base64 --decode >> ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

        # 현재 폴더로 옮기면서 이름만 변경한다
      - name: jar 파일명 변경하기
        run:
          mv ./build/libs/*SNAPSHOT.jar ./app.jar

      - name: EC2로 jar 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          post: ${{ secrets.EC2_PORT }}
          source: ./app.jar
          target: /home/ubuntu/project/tobe

      - name: SSH로 EC2에 접속하기(프로세스 실행)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script_stop: true
          script: |
            rm -rf /home/ubuntu/project/cur || true
            mkdir /home/ubuntu/project/cur
            mv /home/ubuntu/project/tobe/app.jar /home/ubuntu/project/cur/app.jar
            cd /home/ubuntu/project/cur
            sudo fuser -k -n tcp 8080 || true
            sudo nohup java -jar app.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/project/tobe
